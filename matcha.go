// Copyright 2023 Matcha Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package matcha

import (
	"context"

	"github.com/decentplatforms/matcha/pkg/rctx"
	"github.com/decentplatforms/matcha/pkg/route"
	"github.com/decentplatforms/matcha/pkg/router"
)

// Router returns the default HTTP router.
// New routers can optionally be configured with router.ConfigFuncs on construction.
//
// Router panics if an error occurs during router construction. If this behavior isn't desired,
// use router.New instead.
func Router(confs ...router.ConfigFunc) router.Router {
	return router.Declare(router.Default(), confs...)
}

// Route returns a route that matches the provided method and route expression.
// New routes can optionally be configured with route.ConfigFuncs on construction.
//
// Route panics if an error occurs during route construction. If this behavior isn't desired,
// use route.New instead.
func Route(method, expr string, confs ...route.ConfigFunc) route.Route {
	return route.Declare(method, expr, confs...)
}

// Pull in reserved parameters from rctx
const PARAM_FULLPATH = rctx.PARAM_FULLPATH
const PARAM_MOUNTPROXYTO = rctx.PARAM_MOUNTPROXYTO

// GetParam gets a parameter from request context.
// Parameters are usually generated by wildcard parts (uri sections in square brackets []), and accessed
// by the text contained; a route /api/[version] will always have a value for GetParam(req.Context(), "version").
// There are also some reserved parameters defined by Matcha for specific purposes:
//
//   - PARAM_FULLPATH (matcha_fullpath): Stores the first full path that Matcha receives, and is static for the duration
//     of the request, even if the actual request path is modified, like when sending requests to mounted.
//   - PARAM_MOUNTPROXYTO (matcha_mountProxyTo): Stores the path that mounted handlers receive. Not typically of
//     use to the user, but enables handy internal behavior.
//
// Please don't use anything starting with `matcha_` as a URI parameter, as it may cause collision issues in future updates.
func GetParam(ctx context.Context, key string) string {
	return rctx.GetParam(ctx, key)
}
